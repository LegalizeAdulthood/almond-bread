Things I would like to see done to AlmondBread
(help is always appreciated):

- Windows (and maybe Macintosh) compatibility

I don't care about this too much. Should be not too hard though,
since dependence on X is fairly limited (mostly related to colormap
handling and zoombox management). I have never programmed for
Windows (except one console application for NT, but that's been 3
years), so don't expect this in the near future. I don't have access
to a Macintosh (never knew anyone who had one of these things), so
unless someone else does this, there won't be support for it in
AlmondBread.

- Iteration Loop in Assembly

As of 0.22, I don't think it's worth the effort. I have closely
examined the code generated by gcc 2.7.2 and it seems to me there's
not a whole lot you can do about it. The whole loop works only with
registers and I've rearranged the operations to allow better pairing
and replaced the expensive floating point compares with integer
instructions.

- Component detection

Pretty soon. I'm working on this and have had some success with it,
thanks to Jay R. Hill, who has pioneered this method. It's far more
reliable than the FastM() method by Juval Fisher.

- 24 bit graphics using interactive parsing of color functions

I'm not very eager to implement this. In my opinion, 256 colors
suffice. I'm more interested in better algorithms than gadgets.

- arbitrary precision (using GNU gmp or other library?)

Low priority. Would be great to have it though.

- Multi-threading (for Linux, Solaris, Windows)

I'm trying to continually eliminate all non-stack writing use of
variables and eventually have the computation routines multi-threaded
also. So far only GUI and computation separated.

- using the PNG image format

High priority. I'd love to get rid of GIF altogether.

- better portability by providing replacements for libm functions

Not unless someone has trouble getting AlmondBread to work on a system
that needs this.

Michael Ganss
(rms@cs.tu-berlin.de)
